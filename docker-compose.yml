version: '3.9'

services:
  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: users
    restart: always
    depends_on:
      database:
        condition: service_healthy

  items:
    build:
      context: ./seller
      dockerfile: Dockerfile
    container_name: items
    restart: always
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  bids:
    build:
      context: ./buyer
      dockerfile: Dockerfile
    container_name: bids
    restart: always
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  auctions:
    build:
      context: ./auction
      dockerfile: Dockerfile
    container_name: auctions
    restart: always
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - items
      - users

  database:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
    ports:
      - 6000:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmqctl status']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

  redis:
    image: redis/redis-stack
    container_name: redis
    restart: always
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - ./redis-data/d–∞ta:/root/redis
      - ./redis-data/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=admin
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5
