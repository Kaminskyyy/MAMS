version: '3.9'

services:
  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: users
    restart: always
    ports:
      - 3000:3000
    depends_on:
      database:
        condition: service_healthy

  seller:
    build:
      context: ./seller
      dockerfile: Dockerfile
    container_name: seller
    restart: always
    ports:
      - 3001:3000
    depends_on:
      database:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - seller
      - users

  database:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=admin
      - POSTGRES_DB=auction
    ports:
      - 6000:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 20s
      start_period: 10s
      retries: 5

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: auction-rabbitmq
  #   hostname: rabbitmq
  #   restart: always
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=admin
  #     - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
  #   volumes:
  #     - ./rabbitmq-data:/var/lib/rabbitmq
  #   ports:
  #     - 15672:15672
  #     - 5672:5672
  #   healthcheck:
  #     test: ['CMD-SHELL', 'rabbitmqctl status']
  #     interval: 5s
  #     timeout: 20s
  #     start_period: 10s
  #     retries: 5
